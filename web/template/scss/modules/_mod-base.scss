// debug

.debug {
    outline: 1px solid crimson;
}

// spacing modifiers

.mm-pad-row {
    padding-top: 20px;
    padding-bottom: 20px;
}

.mm-pad-top {
    padding-top: $space;
}

.mm-pad-bottom {
    padding-bottom: $space;
}

.mm-pad-half {
    padding-top: $space-half;
    padding-bottom: $space-half;
}

.mm-pad-top-half {
    padding-top: $space-half;
}

.mm-pad-bottom-half {
    padding-bottom: $space-half;
}

.mm-pad-tiny {
    padding-top: $space-tiny;
    padding-bottom: $space-tiny;
}

.mm-pad-top-tiny {
    padding-top: $space-tiny;
}

.mm-pad-bottom-tiny {
    padding-bottom: $space-tiny;
}

.mm-mgr-top {
    margin-top: $space;
}

.mm-mgr-bottom {
    margin-bottom: $space;
}

.mm-mgr-bottom-half {
    margin-bottom: $space-half;
}

.mm-mgr-bottom-tiny {
    margin-bottom: $space-tiny;
}

.mm-no-space {
    margin: 0 0;
    padding: 0 0;
}

//

.s-hollow {
    display: inline-block;
    padding: 0.2em 0.7em;
    border: 2px solid black;

    margin-bottom: $gSpacing;
}

.bg-primary {
    background-color: $color-koma-primary;
}

.bg-primary-dark {
    background-color: $color-koma-primary-dark;
}

.bg-white {
    background-color: white;
}

.bg-grey-light {
    background-color: $color-koma-ui-lighter;
}

.c-primary {
    color: $color-koma-primary;
}

.c-primary-dark {
    color: $color-koma-primary-dark;
}

.c-white {
    color: white;
}

.c-grey-light {
    color: $color-koma-ui-lighter;
}

.c-grey-mid {
    color: $color-koma-ui-darken;
}

.c-ui-mid {
    color: $color-koma-ui-mid;
}

.bg-ui-mid {
    color: $color-koma-ui-mid;
}

// font classes

.f-headline {
    font-family: Purista;
}

.f-body {
    font-family: "Helvetica Neue", Helvetica, Roboto, Arial, sans-serif;
}

.f-up {
    text-transform: uppercase;
}

.f-600 {
    font-weight: 600;
}

.f-800 {
    font-weight: 800;
}

.f-400 {
    font-weight: 400;
}

.f-200 {
    font-weight: 200;
}

// build font helper classes
@mixin createBuildFontSizeHelpers($sizeId, $font-size, $font-size-desktoo, $lineheight, $lineheight-desktop, $pad-height, $pad-height-desktop) {
    $breakpoint: large;

    .f-#{$sizeId} {

        font-size: $font-size;
        line-height: $lineheight;
        &:after,
        &:before {
            font-size: $font-size;
            line-height: $lineheight;
        }

        @include breakpoint($breakpoint) {
            font-size: $font-size-desktoo;
            line-height: $lineheight-desktop;
            &:after,
            &:before {
                font-size: $font-size;
                line-height: $lineheight;
            }
        }
    }

    .f-pad-#{$sizeId} {
        padding-bottom: $pad-height;
        @include breakpoint($breakpoint) {
            padding-bottom: $pad-height-desktop;
        }
    }
}

//@formatter:off
@include createBuildFontSizeHelpers(xxxl, 38px,   50px,  1.32em,  1.32em,     3em,     3em);
@include createBuildFontSizeHelpers(xxl,  28px,   28px,  1.32em,  1.32em,     2em,     2em);
@include createBuildFontSizeHelpers(xl,   20px,   20px,  1.32em,  1.32em,     2em,     2em);
@include createBuildFontSizeHelpers(l,    18px,   18px,   1.2em,   1.2em,   1.5em,   1.5em);
@include createBuildFontSizeHelpers(m,    16px,   16px,   1.2em,   1.2em,     1em,     1em);
@include createBuildFontSizeHelpers(s,    14px,   14px,   1.2em,   1.2em,   0.7em,   0.7em);
@include createBuildFontSizeHelpers(xs,   12px,   12px,   1.2em,   1.2em,   0.5em,   0.5em);
@include createBuildFontSizeHelpers(xxs,  10px,   10px,   1.5em,   1.5em,  0.25em,  0.25em);

//@formatter:on
